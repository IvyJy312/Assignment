package a3jedi;

public class ImmutableGrayFrame2D implements GrayFrame2D {
	private int width;
	private int height;
	private GrayPixel[] org_pixel;
	private GrayPixel[] gray_pixel;

	public ImmutableGrayFrame2D (int width, int height,GrayPixel[]pixels){
		checkWidthHeight(width,height);
		this.width=width;
		this.height=height;
		//gray_pixel=new GrayPixel[width*height];
		this.gray_pixel=org_pixel.clone();
		//pixel = new Pixel[width*height];
		//for(int i=0;i<width*height;i++){
		//for(int x=0;x<width;x++)
		//	for(int y=0;y<height;y++){
		//		int loc=x+y*width;
		//		pixel[loc]=new ColorPixel(INIT_PIXEL_INTENSITY,INIT_PIXEL_INTENSITY,INIT_PIXEL_INTENSITY);
		//		gray_pixel[loc]=new GrayPixel(intensity);
		//	}
		//pixel[i]=new ColorPixel(INIT_PIXEL_INTENSITY,INIT_PIXEL_INTENSITY,INIT_PIXEL_INTENSITY);
		//gray_pixel[i]= new GrayPixel(intensity);
	}

	//}

	public int getWidth() {
		return width;
	}

	public int getHeight() {
		return height;
	}

	public Pixel getPixel(int x, int y) {
		checkCoordinates(x,y);
		return (Pixel)gray_pixel[x+y*width];
	}

	public Frame2D setPixel(int x, int y, Pixel p) {
		checkCoordinates(x,y);
		if (p == null) {
			throw new RuntimeException("Pixel is null");
		}
		int loc = x + y * width;
		gray_pixel[loc]=(GrayPixel) p;

		return this;
	}


	public Frame2D lighten(double factor) {
		for(int i=0;i<gray_pixel.length;i++){
			gray_pixel[i].lighten(factor);
		}

		return this;
	}

	public Frame2D darken(double factor) {
		checkFactor(factor);
		for(int i=0;i<gray_pixel.length;i++){
			gray_pixel[i].darken(factor);
		}

		return this;
	}


	public GrayFrame2D toGrayFrame() {
		return this;
	}

	public GrayPixel getGrayPixel(int x, int y) {
		checkCoordinates(x,y);
		return gray_pixel[x+y*width];
	}

	public GrayFrame2D setGrayPixel(int x, int y, GrayPixel p) {
		checkCoordinates(x,y);
		if (p == null) {
			throw new RuntimeException("GrayPixel is null");
		}
		int loc = x + y * width;
		gray_pixel[loc]=p;
		return this;
	}

	private void checkCoordinates(int x, int y) {
		if (x < 0 || x >= getWidth()) {
			throw new RuntimeException("value " + x + "for x is out of bounds");
		}
		if (y < 0 || y >= getHeight()) {
			throw new RuntimeException("value " + y + "for y is out of bounds");
		}
	}
	private void checkFactor(double h) {
		if (h < 0.0 || h >1.0) {
			//The factor should be a value from 0.0 to 1.0
			throw new RuntimeException("value " + h + "for factor is out of bounds");
		}
	}

	private void checkWidthHeight(int x,int y){
		if(x<0){
			throw new RuntimeException("value " + x + "for x is out of bounds");
		}
		if(y<0){
			throw new RuntimeException("value " + y + "for y is out of bounds");
		}
	}
}

